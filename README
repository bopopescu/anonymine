Anonymine is a curses mode minesweeper that checks if the fields actually are
solvable without guessing and has a few other features.

The game doesn't have a real name yet; suggestions are welcome.

Apart from being solvable without guessing, anonymine:
- can use traditional Moore neighbourhoods (8 neighbours per cell),
- a hexagonal field (6 neighbours per cell)
- or von Neumann neighbourhoods (4 neighbours per cell).
  
- The anonymine_solver module can also be used to "measure the difficulty"
      of a field.


You can also try it over SSH at
ssh://anonymine:anonymine@anonymine-demo.oskog97.com:2222 ie:
User "anonymine", password "anonymine", host "anonymine-demo.oskog97.com",
port "2222".
Or using my [shellinabox server](http://anonymine-demo.oskog97.com:8080/)
with the same username and password.

You can find screenshots and more at
[my website](https://oskog97.com/projects/anonymine/).


See also
========

- Windows.txt for installation instructions for Windows.
- INSTALL for installation instructions. ./configure; make; make install
- FILES to get a hint of all files in the package.



Tested platforms
================

The dependencies are:
(Python 3.x || Python >= 2.6) && "curses" module && (unix || "argparse" module) 

The argparse module is needed for Anonymine to take command line options.
The configuration files can be specified with the -e and -c command line options
to override the default locations which happen to be unix paths.
    
Note that Python 2.6, 3.0 and 3.1 are not expected to have the
module "argparse".
    
CPython 2.6.6 is lowest version of Python that has been tested.

    
|platform                            |Notes                         |
|------------------------------------|------------------------------|
|Cygwin on NT 6.1 [Py 2]             |Don't resize the terminal!    |
|Debian6/kFreeBSD8 [Py 2.6]          |*                             |
|Debian 7                            |*                             |
|Debian 8 [Py 2, 3]                  |                              |
|FreeBSD 9.2 [Py 2]                  |                              |
|Mac OS X [Py 2]                     |ICNS icon is untested         |
|Minix 3.3 [Py 2]                    |$(prefix) is /usr/pkg         |
|NetBSD 6.1 [Py 2]                   |No color                      |
|OpenBSD 5.8                         |                              |
|OpenSUSE 12.2 [Py 2, 3]             |                              |
|Trisquel 6.0 [Py 2, 3]              |*                             |
|openindiana [Py 2.6]                |GNOME terminal is buggy.      |




Goals
=====

|Version|Change                                                         |
|-------|---------------------------------------------------------------|
|0.2    |Performance improvements, no nasty calibration of enginecfg.   |
|0.3    |High-scores.                                                   |
|0.4    |Mouse support.                                                 |
|0.5    |Create a statistics collection module.                         |
|0.6    |Good documentation for the solver algorithm.                   |



Files in this package
=====================

Asterisk marks that the file will be created during building.

  BUGS                  Known bugs, may also include descriptions of old bugs
  ChangeLog             --
  FAQ                   --
  INSTALL               Installation instructions
* Makefile              (Generated by ./configure)
  Makefile.static       The source file for Makefile
  NEWS                  --
  README                (It's an order! :)
  Windows-admin.bat     Installation script for Windows (auto-fetch Cygwin)
  Windows-user.bat      Installation script for Windows (auto-fetch Cygwin)
  Windows.txt           Installation instructions for Windows
* anonymine             (Generated by make)
  anonymine.py          The curses interface for game (interface/engine)
  anonymine_engine.py   The engine part of the game (interface/engine)
  anonymine_fields.py   Defines the minefields
  anonymine_solver.py   Solving algorithm
* check.py              Self-tests to prevent embarrassing releases
  check.sh              Self-tests to prevent embarrassing releases
  configure             See "INSTALL"
  configure.py          Used internally by configure
  cursescfg             The configuration file for the curses interface
  enginecfg             The configuration file for the game's engine
  gedanken              Thoughts...
  install-cfg           Script for installing configuration files
  test.py               Misc small unnecessary functions: demos, etc
  desktop/              Non-essential files for the graphical environments:
    FILES               List of files.
    README              Overview of the contents of the desktop directory.
  perkele/              Abandoned stuff



Copyright
=========

Copyright (c) Oskar Skog, 2016
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1.  Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.

2.  Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

This software is provided by the copyright holders and contributors "as is"
and any express or implied warranties, including, but not limited to, the
implied warranties of merchantability and fitness for a particular purpose
are disclaimed. In no event shall the copyright holder or contributors be
liable for any direct, indirect, incidental, special, exemplary, or
consequential damages (including, but not limited to, procurement of
substitute goods or services; loss of use, data, or profits; or business
interruption) however caused and on any theory of liability, whether in
contract, strict liability, or tort (including negligence or otherwise)
arising in any way out of the use of this software, even if advised of the
possibility of such damage.

